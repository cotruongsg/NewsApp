{"ast":null,"code":"import _regeneratorRuntime from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import LoadingSpinner from\"../support/LoadingSpinner\";import JobCardList from\"../job/JobCardList\";import JoblyApi from\"../api/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CompanyDetail(){var _useParams=useParams(),handle=_useParams.handle;console.debug(\"CompanyDetail\",\"handle=\",handle);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),company=_useState2[0],setCompany=_useState2[1];useEffect(function getCompaniesAndJobsForUser(){function getCompany(){return _getCompany.apply(this,arguments);}function _getCompany(){_getCompany=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var company;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return JoblyApi.getCompany(handle);case 2:company=_context.sent;setCompany(company);case 4:case\"end\":return _context.stop();}},_callee);}));return _getCompany.apply(this,arguments);}getCompany();},[handle]);if(!company)return/*#__PURE__*/_jsx(LoadingSpinner,{});// In Company model of backend company did create a new column jobs by select jobs form job table\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"CompanyDetail col-md-8 offset-md-2\",children:[/*#__PURE__*/_jsx(\"h4\",{children:company.name}),/*#__PURE__*/_jsx(\"p\",{children:company.description}),/*#__PURE__*/_jsx(JobCardList,{jobs:company.jobs})]});}export default CompanyDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","LoadingSpinner","JobCardList","JoblyApi","jsx","_jsx","jsxs","_jsxs","CompanyDetail","_useParams","handle","console","debug","_useState","_useState2","_slicedToArray","company","setCompany","getCompaniesAndJobsForUser","getCompany","_getCompany","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","sent","stop","className","children","name","description","jobs"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/src/company/CompanyDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../support/LoadingSpinner\";\r\nimport JobCardList from \"../job/JobCardList\";\r\nimport JoblyApi from \"../api/api\";\r\nfunction CompanyDetail() {\r\n  const { handle } = useParams();\r\n  console.debug(\"CompanyDetail\", \"handle=\", handle);\r\n  const [company, setCompany] = useState(null);\r\n  useEffect(\r\n    function getCompaniesAndJobsForUser() {\r\n      async function getCompany() {\r\n        let company = await JoblyApi.getCompany(handle);\r\n        setCompany(company);\r\n      }\r\n      getCompany();\r\n    },[handle]\r\n  );\r\n  if (!company) return <LoadingSpinner />;\r\n   // In Company model of backend company did create a new column jobs by select jobs form job table\r\n  return (\r\n    <div className=\"CompanyDetail col-md-8 offset-md-2\">\r\n      <h4>{company.name}</h4>\r\n      <p>{company.description}</p>\r\n      <JobCardList jobs={company.jobs} />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default CompanyDetail;\r\n"],"mappings":"mfAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,cAAc,KAAM,2BAA2B,CACtD,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAClC,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,IAAAC,UAAA,CAAmBT,SAAS,CAAC,CAAC,CAAtBU,MAAM,CAAAD,UAAA,CAANC,MAAM,CACdC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAE,SAAS,CAAEF,MAAM,CAAC,CACjD,IAAAG,SAAA,CAA8Bf,QAAQ,CAAC,IAAI,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1Bf,SAAS,CACP,QAAS,CAAAmB,0BAA0BA,CAAA,CAAG,SACrB,CAAAC,UAAUA,CAAA,SAAAC,WAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,YAAA,EAAAA,WAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAzB,SAAAC,QAAA,MAAAV,OAAA,QAAAQ,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACsB,CAAA5B,QAAQ,CAACgB,UAAU,CAACT,MAAM,CAAC,QAA3CM,OAAO,CAAAa,QAAA,CAAAG,IAAA,CACXf,UAAU,CAACD,OAAO,CAAC,CAAC,wBAAAa,QAAA,CAAAI,IAAA,MAAAP,OAAA,GACrB,UAAAN,WAAA,CAAAC,KAAA,MAAAC,SAAA,GACDH,UAAU,CAAC,CAAC,CACd,CAAC,CAAC,CAACT,MAAM,CACX,CAAC,CACD,GAAI,CAACM,OAAO,CAAE,mBAAOX,IAAA,CAACJ,cAAc,GAAE,CAAC,CACtC;AACD,mBACEM,KAAA,QAAK2B,SAAS,CAAC,oCAAoC,CAAAC,QAAA,eACjD9B,IAAA,OAAA8B,QAAA,CAAKnB,OAAO,CAACoB,IAAI,CAAK,CAAC,cACvB/B,IAAA,MAAA8B,QAAA,CAAInB,OAAO,CAACqB,WAAW,CAAI,CAAC,cAC5BhC,IAAA,CAACH,WAAW,EAACoC,IAAI,CAAEtB,OAAO,CAACsB,IAAK,CAAE,CAAC,EAChC,CAAC,CAGV,CACA,cAAe,CAAA9B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}