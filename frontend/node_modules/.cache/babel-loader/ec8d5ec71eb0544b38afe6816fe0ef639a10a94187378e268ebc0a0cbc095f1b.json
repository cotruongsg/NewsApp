{"ast":null,"code":"import _regeneratorRuntime from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import SearchForm from\"../form/SearchForm\";import LoadingSpinner from\"../support/LoadingSpinner\";import CompanyCard from\"../company/CompanyCard\";import JoblyApi from'../api/api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CompaniesList(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),companies=_useState2[0],setCompanies=_useState2[1];//We use useEffect here for fetch data from backend\n//we also can put search() inside the useEffect\nuseEffect(function getCompaniesFisrtRender(){search();},[]);function search(_x){return _search.apply(this,arguments);}function _search(){_search=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(name){var companies;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return JoblyApi.getCompanies(name);case 2:companies=_context.sent;setCompanies(companies);case 4:case\"end\":return _context.stop();}},_callee);}));return _search.apply(this,arguments);}if(!companies)return/*#__PURE__*/_jsx(LoadingSpinner,{});// we need sign a key for each element inside an array of CompanyCard\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SearchForm,{search:search}),companies.length?/*#__PURE__*/_jsx(\"div\",{className:\"CompanyList-list\",children:companies.map(function(c){return/*#__PURE__*/_jsx(CompanyCard,{handle:c.handle,name:c.name,description:c.description,logoUrl:c.logoUrl},c.handle);})}):/*#__PURE__*/_jsx(\"p\",{children:\"There is no company available\"})]});}export default CompaniesList;","map":{"version":3,"names":["React","useEffect","useState","SearchForm","LoadingSpinner","CompanyCard","JoblyApi","jsx","_jsx","jsxs","_jsxs","CompaniesList","_useState","_useState2","_slicedToArray","companies","setCompanies","getCompaniesFisrtRender","search","_x","_search","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","wrap","_callee$","_context","prev","next","getCompanies","sent","stop","children","length","className","map","c","handle","description","logoUrl"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/src/company/CompaniesList.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport SearchForm from \"../form/SearchForm\";\r\nimport LoadingSpinner from \"../support/LoadingSpinner\";\r\nimport CompanyCard from \"../company/CompanyCard\";\r\nimport JoblyApi from '../api/api';\r\nfunction CompaniesList(){\r\n    const [companies, setCompanies] = useState(null);\r\n    \r\n    //We use useEffect here for fetch data from backend\r\n    //we also can put search() inside the useEffect\r\n    useEffect (function getCompaniesFisrtRender(){\r\n        search();\r\n    }, []);\r\n    async function search(name){\r\n        let companies = await JoblyApi.getCompanies(name);\r\n        setCompanies(companies);\r\n    }\r\n    if (!companies) return <LoadingSpinner />;\r\n    \r\n    // we need sign a key for each element inside an array of CompanyCard\r\n    return (\r\n        <div>\r\n            <SearchForm search = {search} />\r\n            {companies.length ? ( <div className=\"CompanyList-list\">\r\n                {companies.map(c => (\r\n                    <CompanyCard   \r\n                          key={c.handle}\r\n                          handle={c.handle}\r\n                          name={c.name}\r\n                          description={c.description}\r\n                          logoUrl={c.logoUrl}\r\n                    />\r\n                ))}\r\n\r\n            </div>) : (<p>There is no company available</p>)}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CompaniesList;"],"mappings":"mfAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,cAAc,KAAM,2BAA2B,CACtD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAClC,QAAS,CAAAC,aAAaA,CAAA,CAAE,CACpB,IAAAC,SAAA,CAAkCV,QAAQ,CAAC,IAAI,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B;AACA;AACAZ,SAAS,CAAE,QAAS,CAAAgB,uBAAuBA,CAAA,CAAE,CACzCC,MAAM,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAAC,QACQ,CAAAA,MAAMA,CAAAC,EAAA,SAAAC,OAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,QAAA,EAAAA,OAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAC,QAAsBC,IAAI,MAAAZ,SAAA,QAAAS,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACA,CAAA1B,QAAQ,CAAC2B,YAAY,CAACN,IAAI,CAAC,QAA7CZ,SAAS,CAAAe,QAAA,CAAAI,IAAA,CACblB,YAAY,CAACD,SAAS,CAAC,CAAC,wBAAAe,QAAA,CAAAK,IAAA,MAAAT,OAAA,GAC3B,UAAAN,OAAA,CAAAC,KAAA,MAAAC,SAAA,GACD,GAAI,CAACP,SAAS,CAAE,mBAAOP,IAAA,CAACJ,cAAc,GAAE,CAAC,CAEzC;AACA,mBACIM,KAAA,QAAA0B,QAAA,eACI5B,IAAA,CAACL,UAAU,EAACe,MAAM,CAAIA,MAAO,CAAE,CAAC,CAC/BH,SAAS,CAACsB,MAAM,cAAK7B,IAAA,QAAK8B,SAAS,CAAC,kBAAkB,CAAAF,QAAA,CAClDrB,SAAS,CAACwB,GAAG,CAAC,SAAAC,CAAC,qBACZhC,IAAA,CAACH,WAAW,EAENoC,MAAM,CAAED,CAAC,CAACC,MAAO,CACjBd,IAAI,CAAEa,CAAC,CAACb,IAAK,CACbe,WAAW,CAAEF,CAAC,CAACE,WAAY,CAC3BC,OAAO,CAAEH,CAAC,CAACG,OAAQ,EAJdH,CAAC,CAACC,MAKZ,CAAC,EACL,CAAC,CAED,CAAC,cAAKjC,IAAA,MAAA4B,QAAA,CAAG,+BAA6B,CAAG,CAAE,EAC/C,CAAC,CAGd,CACA,cAAe,CAAAzB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}