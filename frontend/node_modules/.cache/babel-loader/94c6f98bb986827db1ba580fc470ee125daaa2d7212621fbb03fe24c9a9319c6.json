{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboard\\\\Springboard\\\\Springboard\\\\Exercises\\\\React\\\\React-Jobly\\\\frontend\\\\src\\\\company\\\\CompaniesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport SearchForm from \"../form/SearchForm\";\nimport LoadingSpinner from \"../support/LoadingSpinner\";\nimport CompanyCard from \"../company/CompanyCard\";\nimport JoblyApi from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompaniesList() {\n  _s();\n  const [companies, setCompanies] = useState(null);\n\n  //We use useEffect here for fetch data from backend\n  //we also can put search() inside the useEffect\n  useEffect(function getCompaniesFisrtRender() {\n    search();\n  }, []);\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n  if (!companies) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 28\n  }, this);\n\n  // we need sign a key for each element inside an array of CompanyCard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), companies.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CompanyList-list\",\n      children: companies.map(c => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        handle: c.handle,\n        name: c.name,\n        description: c.description,\n        logoUrl: c.logoUrl\n      }, c.handle, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no company available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(CompaniesList, \"qkMkKjd/WCoWEhXFAi9cDPzYiug=\");\n_c = CompaniesList;\nexport default CompaniesList;\nvar _c;\n$RefreshReg$(_c, \"CompaniesList\");","map":{"version":3,"names":["React","useEffect","useState","SearchForm","LoadingSpinner","CompanyCard","JoblyApi","jsxDEV","_jsxDEV","CompaniesList","_s","companies","setCompanies","getCompaniesFisrtRender","search","name","getCompanies","fileName","_jsxFileName","lineNumber","columnNumber","children","length","className","map","c","handle","description","logoUrl","_c","$RefreshReg$"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/src/company/CompaniesList.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport SearchForm from \"../form/SearchForm\";\r\nimport LoadingSpinner from \"../support/LoadingSpinner\";\r\nimport CompanyCard from \"../company/CompanyCard\";\r\nimport JoblyApi from '../api/api';\r\nfunction CompaniesList(){\r\n    const [companies, setCompanies] = useState(null);\r\n    \r\n    //We use useEffect here for fetch data from backend\r\n    //we also can put search() inside the useEffect\r\n    useEffect (function getCompaniesFisrtRender(){\r\n        search();\r\n    }, []);\r\n    async function search(name){\r\n        let companies = await JoblyApi.getCompanies(name);\r\n        setCompanies(companies);\r\n    }\r\n    if (!companies) return <LoadingSpinner />;\r\n    \r\n    // we need sign a key for each element inside an array of CompanyCard\r\n    return (\r\n        <div>\r\n            <SearchForm search = {search} />\r\n            {companies.length ? ( <div className=\"CompanyList-list\">\r\n                {companies.map(c => (\r\n                    <CompanyCard   \r\n                          key={c.handle}\r\n                          handle={c.handle}\r\n                          name={c.name}\r\n                          description={c.description}\r\n                          logoUrl={c.logoUrl}\r\n                    />\r\n                ))}\r\n\r\n            </div>) : (<p>There is no company available</p>)}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CompaniesList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,aAAaA,CAAA,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA;EACAD,SAAS,CAAE,SAASY,uBAAuBA,CAAA,EAAE;IACzCC,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,eAAeA,MAAMA,CAACC,IAAI,EAAC;IACvB,IAAIJ,SAAS,GAAG,MAAML,QAAQ,CAACU,YAAY,CAACD,IAAI,CAAC;IACjDH,YAAY,CAACD,SAAS,CAAC;EAC3B;EACA,IAAI,CAACA,SAAS,EAAE,oBAAOH,OAAA,CAACJ,cAAc;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;;EAEzC;EACA,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACL,UAAU;MAACW,MAAM,EAAIA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/BT,SAAS,CAACW,MAAM,gBAAKd,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAClDV,SAAS,CAACa,GAAG,CAACC,CAAC,iBACZjB,OAAA,CAACH,WAAW;QAENqB,MAAM,EAAED,CAAC,CAACC,MAAO;QACjBX,IAAI,EAAEU,CAAC,CAACV,IAAK;QACbY,WAAW,EAAEF,CAAC,CAACE,WAAY;QAC3BC,OAAO,EAAEH,CAAC,CAACG;MAAQ,GAJdH,CAAC,CAACC,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC,gBAAKZ,OAAA;MAAAa,QAAA,EAAG;IAA6B;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAGd;AAACV,EAAA,CAjCQD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}