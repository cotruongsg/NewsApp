{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboard\\\\Springboard\\\\Springboard\\\\Exercises\\\\React\\\\React-Jobly\\\\frontend\\\\src\\\\company\\\\CompanyDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingSpinner from \"../support/LoadingSpinner\";\nimport JobCardList from \"../job/JobCardList\";\nimport JoblyApi from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyDetail() {\n  _s();\n  const {\n    handle\n  } = useParams();\n  console.debug(\"CompanyDetail\", \"handle=\", handle);\n  const [company, setCompany] = useState(null);\n  useEffect(function getCompaniesAndJobsForUser() {\n    async function getCompany() {\n      let company = await JoblyApi.getCompany(handle);\n      setCompany(company);\n    }\n    getCompany();\n  }, [handle]);\n  if (!company) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 24\n  }, this);\n  // In Company model of backend company did create a new column jobs by select jobs form job table\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompanyDetail col-md-8 offset-md-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: company.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JobCardList, {\n      jobs: company.jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CompanyDetail, \"iXW0sHYhmtaDyknNWiCsI22xi70=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetail;\nexport default CompanyDetail;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","LoadingSpinner","JobCardList","JoblyApi","jsxDEV","_jsxDEV","CompanyDetail","_s","handle","console","debug","company","setCompany","getCompaniesAndJobsForUser","getCompany","fileName","_jsxFileName","lineNumber","columnNumber","className","children","name","description","jobs","_c","$RefreshReg$"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/React/React-Jobly/frontend/src/company/CompanyDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../support/LoadingSpinner\";\r\nimport JobCardList from \"../job/JobCardList\";\r\nimport JoblyApi from \"../api/api\";\r\nfunction CompanyDetail() {\r\n  const { handle } = useParams();\r\n  console.debug(\"CompanyDetail\", \"handle=\", handle);\r\n  const [company, setCompany] = useState(null);\r\n  useEffect(\r\n    function getCompaniesAndJobsForUser() {\r\n      async function getCompany() {\r\n        let company = await JoblyApi.getCompany(handle);\r\n        setCompany(company);\r\n      }\r\n      getCompany();\r\n    },[handle]\r\n  );\r\n  if (!company) return <LoadingSpinner />;\r\n   // In Company model of backend company did create a new column jobs by select jobs form job table\r\n  return (\r\n    <div className=\"CompanyDetail col-md-8 offset-md-2\">\r\n      <h4>{company.name}</h4>\r\n      <p>{company.description}</p>\r\n      <JobCardList jobs={company.jobs} />\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default CompanyDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9BS,OAAO,CAACC,KAAK,CAAC,eAAe,EAAE,SAAS,EAAEF,MAAM,CAAC;EACjD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5CC,SAAS,CACP,SAASc,0BAA0BA,CAAA,EAAG;IACpC,eAAeC,UAAUA,CAAA,EAAG;MAC1B,IAAIH,OAAO,GAAG,MAAMR,QAAQ,CAACW,UAAU,CAACN,MAAM,CAAC;MAC/CI,UAAU,CAACD,OAAO,CAAC;IACrB;IACAG,UAAU,CAAC,CAAC;EACd,CAAC,EAAC,CAACN,MAAM,CACX,CAAC;EACD,IAAI,CAACG,OAAO,EAAE,oBAAON,OAAA,CAACJ,cAAc;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACtC;EACD,oBACEb,OAAA;IAAKc,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDf,OAAA;MAAAe,QAAA,EAAKT,OAAO,CAACU;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBb,OAAA;MAAAe,QAAA,EAAIT,OAAO,CAACW;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bb,OAAA,CAACH,WAAW;MAACqB,IAAI,EAAEZ,OAAO,CAACY;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAGV;AAACX,EAAA,CAvBQD,aAAa;EAAA,QACDN,SAAS;AAAA;AAAAwB,EAAA,GADrBlB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}