{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboard\\\\Springboard\\\\Springboard\\\\Exercises\\\\React\\\\news_searching\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport NewsApi from './api/api';\nimport AppRoutes from \"./routes-main/AppRoutes\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport LoadingSpinner from './support/LoadingSpinner';\nimport Navigation from './routes-main/Navigation';\nimport LoadingBar from '@weblif/react-top-loading-bar';\nimport Navbar from './routes-main/Navbar';\nimport UserContext from \"./auth/UserContext\";\nimport Footer from \"./routes-main/Footer\";\nimport \"./polyfills\";\nimport jwt from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_STORAGE_ID = \"NewsApi-token\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [progress, setProgress] = useState(0);\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token);\n\n  // need a useEffect will run whenever the app get a new token\n  useEffect(function loadUserInfor() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n    async function getUser() {\n      if (token) {\n        try {\n          // jwt.decode() will return a payload object which contain username.\n          let {\n            username\n          } = jwt.decode(token);\n          //update new token in the Api class so it can use it to call the API.\n          NewsApi.token = token;\n          let currentUser = await NewsApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n          console.debug(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    // we need to set infoLoaded to fasle before we fetch the data \n    // It will show on the screen : Loading.... when it is waiting for the data from the request.\n    setInfoLoaded(false);\n    getUser();\n  }, [token]);\n\n  // login and get token\n  async function login(loginData) {\n    try {\n      let token = await NewsApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n\n  //signup and  get token\n  async function signup(signupData) {\n    try {\n      let token = await NewsApi.signup({\n        ...signupData\n      });\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n\n  // signout and value of token and currentUser will be null\n  async function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n  if (!infoLoaded) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        setCurrentUser,\n        progress\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingBar, {\n          height: 4,\n          color: \"#39FF14\",\n          progress: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AppRoutes, {\n          login: login,\n          signup: signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2Ij3aHJMzVGw+qVXMNOPDoUCQFw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","NewsApi","AppRoutes","useLocalStorage","LoadingSpinner","Navigation","LoadingBar","Navbar","UserContext","Footer","jwt","jsxDEV","_jsxDEV","TOKEN_STORAGE_ID","App","_s","currentUser","setCurrentUser","token","setToken","infoLoaded","setInfoLoaded","progress","setProgress","console","debug","loadUserInfor","getUser","username","decode","getCurrentUser","err","error","login","loginData","success","errors","signup","signupData","logout","fileName","_jsxFileName","lineNumber","columnNumber","children","Provider","value","className","height","color","_c","$RefreshReg$"],"sources":["C:/Springboard/Springboard/Springboard/Exercises/React/news_searching/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport NewsApi from './api/api';\r\nimport AppRoutes from \"./routes-main/AppRoutes\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport LoadingSpinner from './support/LoadingSpinner';\r\nimport Navigation from './routes-main/Navigation';\r\nimport LoadingBar from '@weblif/react-top-loading-bar'\r\nimport Navbar from './routes-main/Navbar'\r\nimport UserContext from \"./auth/UserContext\";\r\nimport Footer from \"./routes-main/Footer\";\r\nimport \"./polyfills\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport const TOKEN_STORAGE_ID = \"NewsApi-token\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\r\n  const [infoLoaded, setInfoLoaded] = useState(false);  \r\n  const [progress, setProgress] = useState(0)\r\n  console.debug(\r\n      \"App\",\r\n      \"infoLoaded=\",\r\n      infoLoaded,\r\n      \"currentUser=\",\r\n      currentUser,\r\n      \"token=\",\r\n      token\r\n    );\r\n\r\n  // need a useEffect will run whenever the app get a new token\r\n  useEffect(function loadUserInfor(){\r\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\r\n\r\n    async function getUser(){\r\n      if (token){\r\n        try {\r\n          // jwt.decode() will return a payload object which contain username.\r\n          let { username } = jwt.decode(token);\r\n          //update new token in the Api class so it can use it to call the API.\r\n          NewsApi.token = token;\r\n          let currentUser = await NewsApi.getCurrentUser(username);\r\n          setCurrentUser(currentUser);\r\n          console.debug(currentUser);\r\n         \r\n        }catch(err){\r\n           console.error(\"App loadUserInfo: problem loading\", err);\r\n           setCurrentUser(null);\r\n        }\r\n      }\r\n      setInfoLoaded(true);\r\n    } \r\n    // we need to set infoLoaded to fasle before we fetch the data \r\n    // It will show on the screen : Loading.... when it is waiting for the data from the request.\r\n    setInfoLoaded(false);\r\n    getUser();\r\n\r\n  }, [token]);\r\n \r\n  // login and get token\r\n  async function login(loginData){\r\n    try{\r\n      let token = await NewsApi.login(loginData);\r\n      setToken(token);\r\n      return {success :true}\r\n    }catch(errors){\r\n      console.error(\"login failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  //signup and  get token\r\n  async function signup(signupData){\r\n    try{\r\n      let token = await NewsApi.signup({...signupData});\r\n      setToken(token);\r\n      return {success :true};\r\n    }catch(errors){\r\n      console.error(\"signup failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  // signout and value of token and currentUser will be null\r\n  async function logout(){\r\n    setCurrentUser(null);\r\n    setToken(null)\r\n  }\r\n\r\n  if (!infoLoaded) return <LoadingSpinner />;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <UserContext.Provider value={{ currentUser, setCurrentUser , progress}}>\r\n        <div className=\"App\">\r\n          <Navigation logout={logout} />\r\n          <Navbar />\r\n          <LoadingBar\r\n            height = {4}\r\n            color='#39FF14'\r\n            progress={progress}\r\n          />              \r\n          <AppRoutes login={login} signup={signup} />\r\n          <Footer />\r\n        </div>\r\n      </UserContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}